// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: upload_file_info.proto
// Protobuf C++ Version: 5.29.3

#ifndef upload_5ffile_5finfo_2eproto_2epb_2eh
#define upload_5ffile_5finfo_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_upload_5ffile_5finfo_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_upload_5ffile_5finfo_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_upload_5ffile_5finfo_2eproto;
namespace lusp {
class PROTOLusp_SyncUploadFileInfo;
struct PROTOLusp_SyncUploadFileInfoDefaultTypeInternal;
extern PROTOLusp_SyncUploadFileInfoDefaultTypeInternal _PROTOLusp_SyncUploadFileInfo_default_instance_;
class PROTOLusp_UploadRequest;
struct PROTOLusp_UploadRequestDefaultTypeInternal;
extern PROTOLusp_UploadRequestDefaultTypeInternal _PROTOLusp_UploadRequest_default_instance_;
class PROTOLusp_UploadResponse;
struct PROTOLusp_UploadResponseDefaultTypeInternal;
extern PROTOLusp_UploadResponseDefaultTypeInternal _PROTOLusp_UploadResponse_default_instance_;
class PROTOLusp_UploadResultInfo;
struct PROTOLusp_UploadResultInfoDefaultTypeInternal;
extern PROTOLusp_UploadResultInfoDefaultTypeInternal _PROTOLusp_UploadResultInfo_default_instance_;
}  // namespace lusp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace lusp {
enum PROTOLusp_UploadStatusInf : int {
  PROTOLUSP_UPLOAD_STATUS_IDENTIFIERS_COMPLETED = 0,
  PROTOLUSP_UPLOAD_STATUS_IDENTIFIERS_PENDING = 1,
  PROTOLUSP_UPLOAD_STATUS_IDENTIFIERS_UPLOADING = 2,
  PROTOLUSP_UPLOAD_STATUS_IDENTIFIERS_REJECTED = 3,
  PROTOLUSP_UPLOAD_STATUS_IDENTIFIERS_FAILED = 4,
  PROTOLUSP_UPLOAD_STATUS_IDENTIFIERS_UNDEFINED = 5,
  PROTOLusp_UploadStatusInf_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PROTOLusp_UploadStatusInf_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PROTOLusp_UploadStatusInf_IsValid(int value);
extern const uint32_t PROTOLusp_UploadStatusInf_internal_data_[];
constexpr PROTOLusp_UploadStatusInf PROTOLusp_UploadStatusInf_MIN = static_cast<PROTOLusp_UploadStatusInf>(0);
constexpr PROTOLusp_UploadStatusInf PROTOLusp_UploadStatusInf_MAX = static_cast<PROTOLusp_UploadStatusInf>(5);
constexpr int PROTOLusp_UploadStatusInf_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
PROTOLusp_UploadStatusInf_descriptor();
template <typename T>
const std::string& PROTOLusp_UploadStatusInf_Name(T value) {
  static_assert(std::is_same<T, PROTOLusp_UploadStatusInf>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PROTOLusp_UploadStatusInf_Name().");
  return PROTOLusp_UploadStatusInf_Name(static_cast<PROTOLusp_UploadStatusInf>(value));
}
template <>
inline const std::string& PROTOLusp_UploadStatusInf_Name(PROTOLusp_UploadStatusInf value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PROTOLusp_UploadStatusInf_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool PROTOLusp_UploadStatusInf_Parse(absl::string_view name, PROTOLusp_UploadStatusInf* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTOLusp_UploadStatusInf>(
      PROTOLusp_UploadStatusInf_descriptor(), name, value);
}
enum PROTOLusp_UploadFileTyped : int {
  PROTOLUSP_UPLOADTYPE_DOCUMENT = 0,
  PROTOLUSP_UPLOADTYPE_IMAGE = 1,
  PROTOLUSP_UPLOADTYPE_VIDEO = 2,
  PROTOLUSP_UPLOADTYPE_AUDIO = 3,
  PROTOLUSP_UPLOADTYPE_ARCHIVE = 4,
  PROTOLUSP_UPLOADTYPE_CODE = 5,
  PROTOLUSP_UPLOADTYPE_UNDEFINED = 6,
  PROTOLusp_UploadFileTyped_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PROTOLusp_UploadFileTyped_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PROTOLusp_UploadFileTyped_IsValid(int value);
extern const uint32_t PROTOLusp_UploadFileTyped_internal_data_[];
constexpr PROTOLusp_UploadFileTyped PROTOLusp_UploadFileTyped_MIN = static_cast<PROTOLusp_UploadFileTyped>(0);
constexpr PROTOLusp_UploadFileTyped PROTOLusp_UploadFileTyped_MAX = static_cast<PROTOLusp_UploadFileTyped>(6);
constexpr int PROTOLusp_UploadFileTyped_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
PROTOLusp_UploadFileTyped_descriptor();
template <typename T>
const std::string& PROTOLusp_UploadFileTyped_Name(T value) {
  static_assert(std::is_same<T, PROTOLusp_UploadFileTyped>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PROTOLusp_UploadFileTyped_Name().");
  return PROTOLusp_UploadFileTyped_Name(static_cast<PROTOLusp_UploadFileTyped>(value));
}
template <>
inline const std::string& PROTOLusp_UploadFileTyped_Name(PROTOLusp_UploadFileTyped value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PROTOLusp_UploadFileTyped_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool PROTOLusp_UploadFileTyped_Parse(absl::string_view name, PROTOLusp_UploadFileTyped* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTOLusp_UploadFileTyped>(
      PROTOLusp_UploadFileTyped_descriptor(), name, value);
}
enum PROTOLusp_FileExistPolicy : int {
  PROTOLUSP_FILE_EXIST_POLICY_OVERWRITE = 0,
  PROTOLUSP_FILE_EXIST_POLICY_SKIP = 1,
  PROTOLUSP_FILE_EXIST_POLICY_RENAME = 2,
  PROTOLUSP_FILE_EXIST_POLICY_UNDEFINED = 3,
  PROTOLusp_FileExistPolicy_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PROTOLusp_FileExistPolicy_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PROTOLusp_FileExistPolicy_IsValid(int value);
extern const uint32_t PROTOLusp_FileExistPolicy_internal_data_[];
constexpr PROTOLusp_FileExistPolicy PROTOLusp_FileExistPolicy_MIN = static_cast<PROTOLusp_FileExistPolicy>(0);
constexpr PROTOLusp_FileExistPolicy PROTOLusp_FileExistPolicy_MAX = static_cast<PROTOLusp_FileExistPolicy>(3);
constexpr int PROTOLusp_FileExistPolicy_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
PROTOLusp_FileExistPolicy_descriptor();
template <typename T>
const std::string& PROTOLusp_FileExistPolicy_Name(T value) {
  static_assert(std::is_same<T, PROTOLusp_FileExistPolicy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PROTOLusp_FileExistPolicy_Name().");
  return PROTOLusp_FileExistPolicy_Name(static_cast<PROTOLusp_FileExistPolicy>(value));
}
template <>
inline const std::string& PROTOLusp_FileExistPolicy_Name(PROTOLusp_FileExistPolicy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PROTOLusp_FileExistPolicy_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool PROTOLusp_FileExistPolicy_Parse(absl::string_view name, PROTOLusp_FileExistPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PROTOLusp_FileExistPolicy>(
      PROTOLusp_FileExistPolicy_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PROTOLusp_UploadResultInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lusp.PROTOLusp_UploadResultInfo) */ {
 public:
  inline PROTOLusp_UploadResultInfo() : PROTOLusp_UploadResultInfo(nullptr) {}
  ~PROTOLusp_UploadResultInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PROTOLusp_UploadResultInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PROTOLusp_UploadResultInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PROTOLusp_UploadResultInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline PROTOLusp_UploadResultInfo(const PROTOLusp_UploadResultInfo& from) : PROTOLusp_UploadResultInfo(nullptr, from) {}
  inline PROTOLusp_UploadResultInfo(PROTOLusp_UploadResultInfo&& from) noexcept
      : PROTOLusp_UploadResultInfo(nullptr, std::move(from)) {}
  inline PROTOLusp_UploadResultInfo& operator=(const PROTOLusp_UploadResultInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROTOLusp_UploadResultInfo& operator=(PROTOLusp_UploadResultInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROTOLusp_UploadResultInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROTOLusp_UploadResultInfo* internal_default_instance() {
    return reinterpret_cast<const PROTOLusp_UploadResultInfo*>(
        &_PROTOLusp_UploadResultInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PROTOLusp_UploadResultInfo& a, PROTOLusp_UploadResultInfo& b) { a.Swap(&b); }
  inline void Swap(PROTOLusp_UploadResultInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROTOLusp_UploadResultInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROTOLusp_UploadResultInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PROTOLusp_UploadResultInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PROTOLusp_UploadResultInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PROTOLusp_UploadResultInfo& from) { PROTOLusp_UploadResultInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PROTOLusp_UploadResultInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lusp.PROTOLusp_UploadResultInfo"; }

 protected:
  explicit PROTOLusp_UploadResultInfo(::google::protobuf::Arena* arena);
  PROTOLusp_UploadResultInfo(::google::protobuf::Arena* arena, const PROTOLusp_UploadResultInfo& from);
  PROTOLusp_UploadResultInfo(::google::protobuf::Arena* arena, PROTOLusp_UploadResultInfo&& from) noexcept
      : PROTOLusp_UploadResultInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 4,
    kUploadedBytesFieldNumber = 2,
    kTotalBytesFieldNumber = 3,
    kSuccessFieldNumber = 1,
    kErrorCodeFieldNumber = 5,
  };
  // string message = 4;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // uint64 uploaded_bytes = 2;
  void clear_uploaded_bytes() ;
  ::uint64_t uploaded_bytes() const;
  void set_uploaded_bytes(::uint64_t value);

  private:
  ::uint64_t _internal_uploaded_bytes() const;
  void _internal_set_uploaded_bytes(::uint64_t value);

  public:
  // uint64 total_bytes = 3;
  void clear_total_bytes() ;
  ::uint64_t total_bytes() const;
  void set_total_bytes(::uint64_t value);

  private:
  ::uint64_t _internal_total_bytes() const;
  void _internal_set_total_bytes(::uint64_t value);

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // int32 error_code = 5;
  void clear_error_code() ;
  ::int32_t error_code() const;
  void set_error_code(::int32_t value);

  private:
  ::int32_t _internal_error_code() const;
  void _internal_set_error_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lusp.PROTOLusp_UploadResultInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PROTOLusp_UploadResultInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::uint64_t uploaded_bytes_;
    ::uint64_t total_bytes_;
    bool success_;
    ::int32_t error_code_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_upload_5ffile_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOLusp_SyncUploadFileInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lusp.PROTOLusp_SyncUploadFileInfo) */ {
 public:
  inline PROTOLusp_SyncUploadFileInfo() : PROTOLusp_SyncUploadFileInfo(nullptr) {}
  ~PROTOLusp_SyncUploadFileInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PROTOLusp_SyncUploadFileInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PROTOLusp_SyncUploadFileInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PROTOLusp_SyncUploadFileInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline PROTOLusp_SyncUploadFileInfo(const PROTOLusp_SyncUploadFileInfo& from) : PROTOLusp_SyncUploadFileInfo(nullptr, from) {}
  inline PROTOLusp_SyncUploadFileInfo(PROTOLusp_SyncUploadFileInfo&& from) noexcept
      : PROTOLusp_SyncUploadFileInfo(nullptr, std::move(from)) {}
  inline PROTOLusp_SyncUploadFileInfo& operator=(const PROTOLusp_SyncUploadFileInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROTOLusp_SyncUploadFileInfo& operator=(PROTOLusp_SyncUploadFileInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROTOLusp_SyncUploadFileInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROTOLusp_SyncUploadFileInfo* internal_default_instance() {
    return reinterpret_cast<const PROTOLusp_SyncUploadFileInfo*>(
        &_PROTOLusp_SyncUploadFileInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PROTOLusp_SyncUploadFileInfo& a, PROTOLusp_SyncUploadFileInfo& b) { a.Swap(&b); }
  inline void Swap(PROTOLusp_SyncUploadFileInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROTOLusp_SyncUploadFileInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROTOLusp_SyncUploadFileInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PROTOLusp_SyncUploadFileInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PROTOLusp_SyncUploadFileInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PROTOLusp_SyncUploadFileInfo& from) { PROTOLusp_SyncUploadFileInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PROTOLusp_SyncUploadFileInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lusp.PROTOLusp_SyncUploadFileInfo"; }

 protected:
  explicit PROTOLusp_SyncUploadFileInfo(::google::protobuf::Arena* arena);
  PROTOLusp_SyncUploadFileInfo(::google::protobuf::Arena* arena, const PROTOLusp_SyncUploadFileInfo& from);
  PROTOLusp_SyncUploadFileInfo(::google::protobuf::Arena* arena, PROTOLusp_SyncUploadFileInfo&& from) noexcept
      : PROTOLusp_SyncUploadFileInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSLanClientDeviceFieldNumber = 2,
    kSFileFullNameValueFieldNumber = 4,
    kSOnlyFileNameValueFieldNumber = 5,
    kSFileRecordTimeValueFieldNumber = 6,
    kSFileMd5ValueInfoFieldNumber = 7,
    kSAuthTokenValuesFieldNumber = 9,
    kSDescriptionInfoFieldNumber = 12,
    kSSyncFileSizeValueFieldNumber = 3,
    kEUploadFileTypedFieldNumber = 1,
    kEFileExistPolicyFieldNumber = 8,
    kUUploadTimeStampFieldNumber = 10,
    kEUploadStatusInfFieldNumber = 11,
  };
  // string sLanClientDevice = 2;
  void clear_slanclientdevice() ;
  const std::string& slanclientdevice() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_slanclientdevice(Arg_&& arg, Args_... args);
  std::string* mutable_slanclientdevice();
  PROTOBUF_NODISCARD std::string* release_slanclientdevice();
  void set_allocated_slanclientdevice(std::string* value);

  private:
  const std::string& _internal_slanclientdevice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_slanclientdevice(
      const std::string& value);
  std::string* _internal_mutable_slanclientdevice();

  public:
  // string sFileFullNameValue = 4;
  void clear_sfilefullnamevalue() ;
  const std::string& sfilefullnamevalue() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sfilefullnamevalue(Arg_&& arg, Args_... args);
  std::string* mutable_sfilefullnamevalue();
  PROTOBUF_NODISCARD std::string* release_sfilefullnamevalue();
  void set_allocated_sfilefullnamevalue(std::string* value);

  private:
  const std::string& _internal_sfilefullnamevalue() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sfilefullnamevalue(
      const std::string& value);
  std::string* _internal_mutable_sfilefullnamevalue();

  public:
  // string sOnlyFileNameValue = 5;
  void clear_sonlyfilenamevalue() ;
  const std::string& sonlyfilenamevalue() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sonlyfilenamevalue(Arg_&& arg, Args_... args);
  std::string* mutable_sonlyfilenamevalue();
  PROTOBUF_NODISCARD std::string* release_sonlyfilenamevalue();
  void set_allocated_sonlyfilenamevalue(std::string* value);

  private:
  const std::string& _internal_sonlyfilenamevalue() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sonlyfilenamevalue(
      const std::string& value);
  std::string* _internal_mutable_sonlyfilenamevalue();

  public:
  // string sFileRecordTimeValue = 6;
  void clear_sfilerecordtimevalue() ;
  const std::string& sfilerecordtimevalue() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sfilerecordtimevalue(Arg_&& arg, Args_... args);
  std::string* mutable_sfilerecordtimevalue();
  PROTOBUF_NODISCARD std::string* release_sfilerecordtimevalue();
  void set_allocated_sfilerecordtimevalue(std::string* value);

  private:
  const std::string& _internal_sfilerecordtimevalue() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sfilerecordtimevalue(
      const std::string& value);
  std::string* _internal_mutable_sfilerecordtimevalue();

  public:
  // string sFileMd5ValueInfo = 7;
  void clear_sfilemd5valueinfo() ;
  const std::string& sfilemd5valueinfo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sfilemd5valueinfo(Arg_&& arg, Args_... args);
  std::string* mutable_sfilemd5valueinfo();
  PROTOBUF_NODISCARD std::string* release_sfilemd5valueinfo();
  void set_allocated_sfilemd5valueinfo(std::string* value);

  private:
  const std::string& _internal_sfilemd5valueinfo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sfilemd5valueinfo(
      const std::string& value);
  std::string* _internal_mutable_sfilemd5valueinfo();

  public:
  // string sAuthTokenValues = 9;
  void clear_sauthtokenvalues() ;
  const std::string& sauthtokenvalues() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sauthtokenvalues(Arg_&& arg, Args_... args);
  std::string* mutable_sauthtokenvalues();
  PROTOBUF_NODISCARD std::string* release_sauthtokenvalues();
  void set_allocated_sauthtokenvalues(std::string* value);

  private:
  const std::string& _internal_sauthtokenvalues() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sauthtokenvalues(
      const std::string& value);
  std::string* _internal_mutable_sauthtokenvalues();

  public:
  // string sDescriptionInfo = 12;
  void clear_sdescriptioninfo() ;
  const std::string& sdescriptioninfo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sdescriptioninfo(Arg_&& arg, Args_... args);
  std::string* mutable_sdescriptioninfo();
  PROTOBUF_NODISCARD std::string* release_sdescriptioninfo();
  void set_allocated_sdescriptioninfo(std::string* value);

  private:
  const std::string& _internal_sdescriptioninfo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sdescriptioninfo(
      const std::string& value);
  std::string* _internal_mutable_sdescriptioninfo();

  public:
  // uint64 sSyncFileSizeValue = 3;
  void clear_ssyncfilesizevalue() ;
  ::uint64_t ssyncfilesizevalue() const;
  void set_ssyncfilesizevalue(::uint64_t value);

  private:
  ::uint64_t _internal_ssyncfilesizevalue() const;
  void _internal_set_ssyncfilesizevalue(::uint64_t value);

  public:
  // .lusp.PROTOLusp_UploadFileTyped eUploadFileTyped = 1;
  void clear_euploadfiletyped() ;
  ::lusp::PROTOLusp_UploadFileTyped euploadfiletyped() const;
  void set_euploadfiletyped(::lusp::PROTOLusp_UploadFileTyped value);

  private:
  ::lusp::PROTOLusp_UploadFileTyped _internal_euploadfiletyped() const;
  void _internal_set_euploadfiletyped(::lusp::PROTOLusp_UploadFileTyped value);

  public:
  // .lusp.PROTOLusp_FileExistPolicy eFileExistPolicy = 8;
  void clear_efileexistpolicy() ;
  ::lusp::PROTOLusp_FileExistPolicy efileexistpolicy() const;
  void set_efileexistpolicy(::lusp::PROTOLusp_FileExistPolicy value);

  private:
  ::lusp::PROTOLusp_FileExistPolicy _internal_efileexistpolicy() const;
  void _internal_set_efileexistpolicy(::lusp::PROTOLusp_FileExistPolicy value);

  public:
  // uint64 uUploadTimeStamp = 10;
  void clear_uuploadtimestamp() ;
  ::uint64_t uuploadtimestamp() const;
  void set_uuploadtimestamp(::uint64_t value);

  private:
  ::uint64_t _internal_uuploadtimestamp() const;
  void _internal_set_uuploadtimestamp(::uint64_t value);

  public:
  // .lusp.PROTOLusp_UploadStatusInf eUploadStatusInf = 11;
  void clear_euploadstatusinf() ;
  ::lusp::PROTOLusp_UploadStatusInf euploadstatusinf() const;
  void set_euploadstatusinf(::lusp::PROTOLusp_UploadStatusInf value);

  private:
  ::lusp::PROTOLusp_UploadStatusInf _internal_euploadstatusinf() const;
  void _internal_set_euploadstatusinf(::lusp::PROTOLusp_UploadStatusInf value);

  public:
  // @@protoc_insertion_point(class_scope:lusp.PROTOLusp_SyncUploadFileInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      171, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PROTOLusp_SyncUploadFileInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr slanclientdevice_;
    ::google::protobuf::internal::ArenaStringPtr sfilefullnamevalue_;
    ::google::protobuf::internal::ArenaStringPtr sonlyfilenamevalue_;
    ::google::protobuf::internal::ArenaStringPtr sfilerecordtimevalue_;
    ::google::protobuf::internal::ArenaStringPtr sfilemd5valueinfo_;
    ::google::protobuf::internal::ArenaStringPtr sauthtokenvalues_;
    ::google::protobuf::internal::ArenaStringPtr sdescriptioninfo_;
    ::uint64_t ssyncfilesizevalue_;
    int euploadfiletyped_;
    int efileexistpolicy_;
    ::uint64_t uuploadtimestamp_;
    int euploadstatusinf_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_upload_5ffile_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOLusp_UploadResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lusp.PROTOLusp_UploadResponse) */ {
 public:
  inline PROTOLusp_UploadResponse() : PROTOLusp_UploadResponse(nullptr) {}
  ~PROTOLusp_UploadResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PROTOLusp_UploadResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PROTOLusp_UploadResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PROTOLusp_UploadResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PROTOLusp_UploadResponse(const PROTOLusp_UploadResponse& from) : PROTOLusp_UploadResponse(nullptr, from) {}
  inline PROTOLusp_UploadResponse(PROTOLusp_UploadResponse&& from) noexcept
      : PROTOLusp_UploadResponse(nullptr, std::move(from)) {}
  inline PROTOLusp_UploadResponse& operator=(const PROTOLusp_UploadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROTOLusp_UploadResponse& operator=(PROTOLusp_UploadResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROTOLusp_UploadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROTOLusp_UploadResponse* internal_default_instance() {
    return reinterpret_cast<const PROTOLusp_UploadResponse*>(
        &_PROTOLusp_UploadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PROTOLusp_UploadResponse& a, PROTOLusp_UploadResponse& b) { a.Swap(&b); }
  inline void Swap(PROTOLusp_UploadResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROTOLusp_UploadResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROTOLusp_UploadResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PROTOLusp_UploadResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PROTOLusp_UploadResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PROTOLusp_UploadResponse& from) { PROTOLusp_UploadResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PROTOLusp_UploadResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lusp.PROTOLusp_UploadResponse"; }

 protected:
  explicit PROTOLusp_UploadResponse(::google::protobuf::Arena* arena);
  PROTOLusp_UploadResponse(::google::protobuf::Arena* arena, const PROTOLusp_UploadResponse& from);
  PROTOLusp_UploadResponse(::google::protobuf::Arena* arena, PROTOLusp_UploadResponse&& from) noexcept
      : PROTOLusp_UploadResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultFieldNumber = 1,
  };
  // .lusp.PROTOLusp_UploadResultInfo result = 1;
  bool has_result() const;
  void clear_result() ;
  const ::lusp::PROTOLusp_UploadResultInfo& result() const;
  PROTOBUF_NODISCARD ::lusp::PROTOLusp_UploadResultInfo* release_result();
  ::lusp::PROTOLusp_UploadResultInfo* mutable_result();
  void set_allocated_result(::lusp::PROTOLusp_UploadResultInfo* value);
  void unsafe_arena_set_allocated_result(::lusp::PROTOLusp_UploadResultInfo* value);
  ::lusp::PROTOLusp_UploadResultInfo* unsafe_arena_release_result();

  private:
  const ::lusp::PROTOLusp_UploadResultInfo& _internal_result() const;
  ::lusp::PROTOLusp_UploadResultInfo* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:lusp.PROTOLusp_UploadResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PROTOLusp_UploadResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::lusp::PROTOLusp_UploadResultInfo* result_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_upload_5ffile_5finfo_2eproto;
};
// -------------------------------------------------------------------

class PROTOLusp_UploadRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lusp.PROTOLusp_UploadRequest) */ {
 public:
  inline PROTOLusp_UploadRequest() : PROTOLusp_UploadRequest(nullptr) {}
  ~PROTOLusp_UploadRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PROTOLusp_UploadRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PROTOLusp_UploadRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PROTOLusp_UploadRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PROTOLusp_UploadRequest(const PROTOLusp_UploadRequest& from) : PROTOLusp_UploadRequest(nullptr, from) {}
  inline PROTOLusp_UploadRequest(PROTOLusp_UploadRequest&& from) noexcept
      : PROTOLusp_UploadRequest(nullptr, std::move(from)) {}
  inline PROTOLusp_UploadRequest& operator=(const PROTOLusp_UploadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROTOLusp_UploadRequest& operator=(PROTOLusp_UploadRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROTOLusp_UploadRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROTOLusp_UploadRequest* internal_default_instance() {
    return reinterpret_cast<const PROTOLusp_UploadRequest*>(
        &_PROTOLusp_UploadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PROTOLusp_UploadRequest& a, PROTOLusp_UploadRequest& b) { a.Swap(&b); }
  inline void Swap(PROTOLusp_UploadRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROTOLusp_UploadRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROTOLusp_UploadRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PROTOLusp_UploadRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PROTOLusp_UploadRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PROTOLusp_UploadRequest& from) { PROTOLusp_UploadRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PROTOLusp_UploadRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lusp.PROTOLusp_UploadRequest"; }

 protected:
  explicit PROTOLusp_UploadRequest(::google::protobuf::Arena* arena);
  PROTOLusp_UploadRequest(::google::protobuf::Arena* arena, const PROTOLusp_UploadRequest& from);
  PROTOLusp_UploadRequest(::google::protobuf::Arena* arena, PROTOLusp_UploadRequest&& from) noexcept
      : PROTOLusp_UploadRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileInfoFieldNumber = 1,
  };
  // .lusp.PROTOLusp_SyncUploadFileInfo file_info = 1;
  bool has_file_info() const;
  void clear_file_info() ;
  const ::lusp::PROTOLusp_SyncUploadFileInfo& file_info() const;
  PROTOBUF_NODISCARD ::lusp::PROTOLusp_SyncUploadFileInfo* release_file_info();
  ::lusp::PROTOLusp_SyncUploadFileInfo* mutable_file_info();
  void set_allocated_file_info(::lusp::PROTOLusp_SyncUploadFileInfo* value);
  void unsafe_arena_set_allocated_file_info(::lusp::PROTOLusp_SyncUploadFileInfo* value);
  ::lusp::PROTOLusp_SyncUploadFileInfo* unsafe_arena_release_file_info();

  private:
  const ::lusp::PROTOLusp_SyncUploadFileInfo& _internal_file_info() const;
  ::lusp::PROTOLusp_SyncUploadFileInfo* _internal_mutable_file_info();

  public:
  // @@protoc_insertion_point(class_scope:lusp.PROTOLusp_UploadRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PROTOLusp_UploadRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::lusp::PROTOLusp_SyncUploadFileInfo* file_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_upload_5ffile_5finfo_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PROTOLusp_SyncUploadFileInfo

// .lusp.PROTOLusp_UploadFileTyped eUploadFileTyped = 1;
inline void PROTOLusp_SyncUploadFileInfo::clear_euploadfiletyped() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.euploadfiletyped_ = 0;
}
inline ::lusp::PROTOLusp_UploadFileTyped PROTOLusp_SyncUploadFileInfo::euploadfiletyped() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.eUploadFileTyped)
  return _internal_euploadfiletyped();
}
inline void PROTOLusp_SyncUploadFileInfo::set_euploadfiletyped(::lusp::PROTOLusp_UploadFileTyped value) {
  _internal_set_euploadfiletyped(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.eUploadFileTyped)
}
inline ::lusp::PROTOLusp_UploadFileTyped PROTOLusp_SyncUploadFileInfo::_internal_euploadfiletyped() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lusp::PROTOLusp_UploadFileTyped>(_impl_.euploadfiletyped_);
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_euploadfiletyped(::lusp::PROTOLusp_UploadFileTyped value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.euploadfiletyped_ = value;
}

// string sLanClientDevice = 2;
inline void PROTOLusp_SyncUploadFileInfo::clear_slanclientdevice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slanclientdevice_.ClearToEmpty();
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::slanclientdevice() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sLanClientDevice)
  return _internal_slanclientdevice();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_SyncUploadFileInfo::set_slanclientdevice(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slanclientdevice_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sLanClientDevice)
}
inline std::string* PROTOLusp_SyncUploadFileInfo::mutable_slanclientdevice() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_slanclientdevice();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_SyncUploadFileInfo.sLanClientDevice)
  return _s;
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::_internal_slanclientdevice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slanclientdevice_.Get();
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_slanclientdevice(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slanclientdevice_.Set(value, GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::_internal_mutable_slanclientdevice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.slanclientdevice_.Mutable( GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::release_slanclientdevice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_SyncUploadFileInfo.sLanClientDevice)
  return _impl_.slanclientdevice_.Release();
}
inline void PROTOLusp_SyncUploadFileInfo::set_allocated_slanclientdevice(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slanclientdevice_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.slanclientdevice_.IsDefault()) {
    _impl_.slanclientdevice_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_SyncUploadFileInfo.sLanClientDevice)
}

// uint64 sSyncFileSizeValue = 3;
inline void PROTOLusp_SyncUploadFileInfo::clear_ssyncfilesizevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ssyncfilesizevalue_ = ::uint64_t{0u};
}
inline ::uint64_t PROTOLusp_SyncUploadFileInfo::ssyncfilesizevalue() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sSyncFileSizeValue)
  return _internal_ssyncfilesizevalue();
}
inline void PROTOLusp_SyncUploadFileInfo::set_ssyncfilesizevalue(::uint64_t value) {
  _internal_set_ssyncfilesizevalue(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sSyncFileSizeValue)
}
inline ::uint64_t PROTOLusp_SyncUploadFileInfo::_internal_ssyncfilesizevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ssyncfilesizevalue_;
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_ssyncfilesizevalue(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ssyncfilesizevalue_ = value;
}

// string sFileFullNameValue = 4;
inline void PROTOLusp_SyncUploadFileInfo::clear_sfilefullnamevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilefullnamevalue_.ClearToEmpty();
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::sfilefullnamevalue() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sFileFullNameValue)
  return _internal_sfilefullnamevalue();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_SyncUploadFileInfo::set_sfilefullnamevalue(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilefullnamevalue_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sFileFullNameValue)
}
inline std::string* PROTOLusp_SyncUploadFileInfo::mutable_sfilefullnamevalue() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sfilefullnamevalue();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_SyncUploadFileInfo.sFileFullNameValue)
  return _s;
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::_internal_sfilefullnamevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sfilefullnamevalue_.Get();
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_sfilefullnamevalue(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilefullnamevalue_.Set(value, GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::_internal_mutable_sfilefullnamevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sfilefullnamevalue_.Mutable( GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::release_sfilefullnamevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_SyncUploadFileInfo.sFileFullNameValue)
  return _impl_.sfilefullnamevalue_.Release();
}
inline void PROTOLusp_SyncUploadFileInfo::set_allocated_sfilefullnamevalue(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilefullnamevalue_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sfilefullnamevalue_.IsDefault()) {
    _impl_.sfilefullnamevalue_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_SyncUploadFileInfo.sFileFullNameValue)
}

// string sOnlyFileNameValue = 5;
inline void PROTOLusp_SyncUploadFileInfo::clear_sonlyfilenamevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sonlyfilenamevalue_.ClearToEmpty();
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::sonlyfilenamevalue() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sOnlyFileNameValue)
  return _internal_sonlyfilenamevalue();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_SyncUploadFileInfo::set_sonlyfilenamevalue(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sonlyfilenamevalue_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sOnlyFileNameValue)
}
inline std::string* PROTOLusp_SyncUploadFileInfo::mutable_sonlyfilenamevalue() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sonlyfilenamevalue();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_SyncUploadFileInfo.sOnlyFileNameValue)
  return _s;
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::_internal_sonlyfilenamevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sonlyfilenamevalue_.Get();
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_sonlyfilenamevalue(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sonlyfilenamevalue_.Set(value, GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::_internal_mutable_sonlyfilenamevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sonlyfilenamevalue_.Mutable( GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::release_sonlyfilenamevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_SyncUploadFileInfo.sOnlyFileNameValue)
  return _impl_.sonlyfilenamevalue_.Release();
}
inline void PROTOLusp_SyncUploadFileInfo::set_allocated_sonlyfilenamevalue(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sonlyfilenamevalue_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sonlyfilenamevalue_.IsDefault()) {
    _impl_.sonlyfilenamevalue_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_SyncUploadFileInfo.sOnlyFileNameValue)
}

// string sFileRecordTimeValue = 6;
inline void PROTOLusp_SyncUploadFileInfo::clear_sfilerecordtimevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilerecordtimevalue_.ClearToEmpty();
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::sfilerecordtimevalue() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sFileRecordTimeValue)
  return _internal_sfilerecordtimevalue();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_SyncUploadFileInfo::set_sfilerecordtimevalue(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilerecordtimevalue_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sFileRecordTimeValue)
}
inline std::string* PROTOLusp_SyncUploadFileInfo::mutable_sfilerecordtimevalue() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sfilerecordtimevalue();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_SyncUploadFileInfo.sFileRecordTimeValue)
  return _s;
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::_internal_sfilerecordtimevalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sfilerecordtimevalue_.Get();
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_sfilerecordtimevalue(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilerecordtimevalue_.Set(value, GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::_internal_mutable_sfilerecordtimevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sfilerecordtimevalue_.Mutable( GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::release_sfilerecordtimevalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_SyncUploadFileInfo.sFileRecordTimeValue)
  return _impl_.sfilerecordtimevalue_.Release();
}
inline void PROTOLusp_SyncUploadFileInfo::set_allocated_sfilerecordtimevalue(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilerecordtimevalue_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sfilerecordtimevalue_.IsDefault()) {
    _impl_.sfilerecordtimevalue_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_SyncUploadFileInfo.sFileRecordTimeValue)
}

// string sFileMd5ValueInfo = 7;
inline void PROTOLusp_SyncUploadFileInfo::clear_sfilemd5valueinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilemd5valueinfo_.ClearToEmpty();
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::sfilemd5valueinfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sFileMd5ValueInfo)
  return _internal_sfilemd5valueinfo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_SyncUploadFileInfo::set_sfilemd5valueinfo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilemd5valueinfo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sFileMd5ValueInfo)
}
inline std::string* PROTOLusp_SyncUploadFileInfo::mutable_sfilemd5valueinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sfilemd5valueinfo();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_SyncUploadFileInfo.sFileMd5ValueInfo)
  return _s;
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::_internal_sfilemd5valueinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sfilemd5valueinfo_.Get();
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_sfilemd5valueinfo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilemd5valueinfo_.Set(value, GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::_internal_mutable_sfilemd5valueinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sfilemd5valueinfo_.Mutable( GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::release_sfilemd5valueinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_SyncUploadFileInfo.sFileMd5ValueInfo)
  return _impl_.sfilemd5valueinfo_.Release();
}
inline void PROTOLusp_SyncUploadFileInfo::set_allocated_sfilemd5valueinfo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sfilemd5valueinfo_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sfilemd5valueinfo_.IsDefault()) {
    _impl_.sfilemd5valueinfo_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_SyncUploadFileInfo.sFileMd5ValueInfo)
}

// .lusp.PROTOLusp_FileExistPolicy eFileExistPolicy = 8;
inline void PROTOLusp_SyncUploadFileInfo::clear_efileexistpolicy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.efileexistpolicy_ = 0;
}
inline ::lusp::PROTOLusp_FileExistPolicy PROTOLusp_SyncUploadFileInfo::efileexistpolicy() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.eFileExistPolicy)
  return _internal_efileexistpolicy();
}
inline void PROTOLusp_SyncUploadFileInfo::set_efileexistpolicy(::lusp::PROTOLusp_FileExistPolicy value) {
  _internal_set_efileexistpolicy(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.eFileExistPolicy)
}
inline ::lusp::PROTOLusp_FileExistPolicy PROTOLusp_SyncUploadFileInfo::_internal_efileexistpolicy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lusp::PROTOLusp_FileExistPolicy>(_impl_.efileexistpolicy_);
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_efileexistpolicy(::lusp::PROTOLusp_FileExistPolicy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.efileexistpolicy_ = value;
}

// string sAuthTokenValues = 9;
inline void PROTOLusp_SyncUploadFileInfo::clear_sauthtokenvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sauthtokenvalues_.ClearToEmpty();
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::sauthtokenvalues() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sAuthTokenValues)
  return _internal_sauthtokenvalues();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_SyncUploadFileInfo::set_sauthtokenvalues(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sauthtokenvalues_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sAuthTokenValues)
}
inline std::string* PROTOLusp_SyncUploadFileInfo::mutable_sauthtokenvalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sauthtokenvalues();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_SyncUploadFileInfo.sAuthTokenValues)
  return _s;
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::_internal_sauthtokenvalues() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sauthtokenvalues_.Get();
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_sauthtokenvalues(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sauthtokenvalues_.Set(value, GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::_internal_mutable_sauthtokenvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sauthtokenvalues_.Mutable( GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::release_sauthtokenvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_SyncUploadFileInfo.sAuthTokenValues)
  return _impl_.sauthtokenvalues_.Release();
}
inline void PROTOLusp_SyncUploadFileInfo::set_allocated_sauthtokenvalues(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sauthtokenvalues_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sauthtokenvalues_.IsDefault()) {
    _impl_.sauthtokenvalues_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_SyncUploadFileInfo.sAuthTokenValues)
}

// uint64 uUploadTimeStamp = 10;
inline void PROTOLusp_SyncUploadFileInfo::clear_uuploadtimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuploadtimestamp_ = ::uint64_t{0u};
}
inline ::uint64_t PROTOLusp_SyncUploadFileInfo::uuploadtimestamp() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.uUploadTimeStamp)
  return _internal_uuploadtimestamp();
}
inline void PROTOLusp_SyncUploadFileInfo::set_uuploadtimestamp(::uint64_t value) {
  _internal_set_uuploadtimestamp(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.uUploadTimeStamp)
}
inline ::uint64_t PROTOLusp_SyncUploadFileInfo::_internal_uuploadtimestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uuploadtimestamp_;
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_uuploadtimestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uuploadtimestamp_ = value;
}

// .lusp.PROTOLusp_UploadStatusInf eUploadStatusInf = 11;
inline void PROTOLusp_SyncUploadFileInfo::clear_euploadstatusinf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.euploadstatusinf_ = 0;
}
inline ::lusp::PROTOLusp_UploadStatusInf PROTOLusp_SyncUploadFileInfo::euploadstatusinf() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.eUploadStatusInf)
  return _internal_euploadstatusinf();
}
inline void PROTOLusp_SyncUploadFileInfo::set_euploadstatusinf(::lusp::PROTOLusp_UploadStatusInf value) {
  _internal_set_euploadstatusinf(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.eUploadStatusInf)
}
inline ::lusp::PROTOLusp_UploadStatusInf PROTOLusp_SyncUploadFileInfo::_internal_euploadstatusinf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lusp::PROTOLusp_UploadStatusInf>(_impl_.euploadstatusinf_);
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_euploadstatusinf(::lusp::PROTOLusp_UploadStatusInf value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.euploadstatusinf_ = value;
}

// string sDescriptionInfo = 12;
inline void PROTOLusp_SyncUploadFileInfo::clear_sdescriptioninfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sdescriptioninfo_.ClearToEmpty();
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::sdescriptioninfo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_SyncUploadFileInfo.sDescriptionInfo)
  return _internal_sdescriptioninfo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_SyncUploadFileInfo::set_sdescriptioninfo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sdescriptioninfo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_SyncUploadFileInfo.sDescriptionInfo)
}
inline std::string* PROTOLusp_SyncUploadFileInfo::mutable_sdescriptioninfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sdescriptioninfo();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_SyncUploadFileInfo.sDescriptionInfo)
  return _s;
}
inline const std::string& PROTOLusp_SyncUploadFileInfo::_internal_sdescriptioninfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sdescriptioninfo_.Get();
}
inline void PROTOLusp_SyncUploadFileInfo::_internal_set_sdescriptioninfo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sdescriptioninfo_.Set(value, GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::_internal_mutable_sdescriptioninfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sdescriptioninfo_.Mutable( GetArena());
}
inline std::string* PROTOLusp_SyncUploadFileInfo::release_sdescriptioninfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_SyncUploadFileInfo.sDescriptionInfo)
  return _impl_.sdescriptioninfo_.Release();
}
inline void PROTOLusp_SyncUploadFileInfo::set_allocated_sdescriptioninfo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sdescriptioninfo_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sdescriptioninfo_.IsDefault()) {
    _impl_.sdescriptioninfo_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_SyncUploadFileInfo.sDescriptionInfo)
}

// -------------------------------------------------------------------

// PROTOLusp_UploadRequest

// .lusp.PROTOLusp_SyncUploadFileInfo file_info = 1;
inline bool PROTOLusp_UploadRequest::has_file_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.file_info_ != nullptr);
  return value;
}
inline void PROTOLusp_UploadRequest::clear_file_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_info_ != nullptr) _impl_.file_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lusp::PROTOLusp_SyncUploadFileInfo& PROTOLusp_UploadRequest::_internal_file_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lusp::PROTOLusp_SyncUploadFileInfo* p = _impl_.file_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::lusp::PROTOLusp_SyncUploadFileInfo&>(::lusp::_PROTOLusp_SyncUploadFileInfo_default_instance_);
}
inline const ::lusp::PROTOLusp_SyncUploadFileInfo& PROTOLusp_UploadRequest::file_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_UploadRequest.file_info)
  return _internal_file_info();
}
inline void PROTOLusp_UploadRequest::unsafe_arena_set_allocated_file_info(::lusp::PROTOLusp_SyncUploadFileInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_info_);
  }
  _impl_.file_info_ = reinterpret_cast<::lusp::PROTOLusp_SyncUploadFileInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lusp.PROTOLusp_UploadRequest.file_info)
}
inline ::lusp::PROTOLusp_SyncUploadFileInfo* PROTOLusp_UploadRequest::release_file_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lusp::PROTOLusp_SyncUploadFileInfo* released = _impl_.file_info_;
  _impl_.file_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::lusp::PROTOLusp_SyncUploadFileInfo* PROTOLusp_UploadRequest::unsafe_arena_release_file_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_UploadRequest.file_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lusp::PROTOLusp_SyncUploadFileInfo* temp = _impl_.file_info_;
  _impl_.file_info_ = nullptr;
  return temp;
}
inline ::lusp::PROTOLusp_SyncUploadFileInfo* PROTOLusp_UploadRequest::_internal_mutable_file_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lusp::PROTOLusp_SyncUploadFileInfo>(GetArena());
    _impl_.file_info_ = reinterpret_cast<::lusp::PROTOLusp_SyncUploadFileInfo*>(p);
  }
  return _impl_.file_info_;
}
inline ::lusp::PROTOLusp_SyncUploadFileInfo* PROTOLusp_UploadRequest::mutable_file_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lusp::PROTOLusp_SyncUploadFileInfo* _msg = _internal_mutable_file_info();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_UploadRequest.file_info)
  return _msg;
}
inline void PROTOLusp_UploadRequest::set_allocated_file_info(::lusp::PROTOLusp_SyncUploadFileInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.file_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.file_info_ = reinterpret_cast<::lusp::PROTOLusp_SyncUploadFileInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_UploadRequest.file_info)
}

// -------------------------------------------------------------------

// PROTOLusp_UploadResultInfo

// bool success = 1;
inline void PROTOLusp_UploadResultInfo::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool PROTOLusp_UploadResultInfo::success() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_UploadResultInfo.success)
  return _internal_success();
}
inline void PROTOLusp_UploadResultInfo::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_UploadResultInfo.success)
}
inline bool PROTOLusp_UploadResultInfo::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void PROTOLusp_UploadResultInfo::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// uint64 uploaded_bytes = 2;
inline void PROTOLusp_UploadResultInfo::clear_uploaded_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uploaded_bytes_ = ::uint64_t{0u};
}
inline ::uint64_t PROTOLusp_UploadResultInfo::uploaded_bytes() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_UploadResultInfo.uploaded_bytes)
  return _internal_uploaded_bytes();
}
inline void PROTOLusp_UploadResultInfo::set_uploaded_bytes(::uint64_t value) {
  _internal_set_uploaded_bytes(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_UploadResultInfo.uploaded_bytes)
}
inline ::uint64_t PROTOLusp_UploadResultInfo::_internal_uploaded_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uploaded_bytes_;
}
inline void PROTOLusp_UploadResultInfo::_internal_set_uploaded_bytes(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uploaded_bytes_ = value;
}

// uint64 total_bytes = 3;
inline void PROTOLusp_UploadResultInfo::clear_total_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_bytes_ = ::uint64_t{0u};
}
inline ::uint64_t PROTOLusp_UploadResultInfo::total_bytes() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_UploadResultInfo.total_bytes)
  return _internal_total_bytes();
}
inline void PROTOLusp_UploadResultInfo::set_total_bytes(::uint64_t value) {
  _internal_set_total_bytes(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_UploadResultInfo.total_bytes)
}
inline ::uint64_t PROTOLusp_UploadResultInfo::_internal_total_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_bytes_;
}
inline void PROTOLusp_UploadResultInfo::_internal_set_total_bytes(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_bytes_ = value;
}

// string message = 4;
inline void PROTOLusp_UploadResultInfo::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& PROTOLusp_UploadResultInfo::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_UploadResultInfo.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PROTOLusp_UploadResultInfo::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_UploadResultInfo.message)
}
inline std::string* PROTOLusp_UploadResultInfo::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_UploadResultInfo.message)
  return _s;
}
inline const std::string& PROTOLusp_UploadResultInfo::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void PROTOLusp_UploadResultInfo::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* PROTOLusp_UploadResultInfo::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* PROTOLusp_UploadResultInfo::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_UploadResultInfo.message)
  return _impl_.message_.Release();
}
inline void PROTOLusp_UploadResultInfo::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_UploadResultInfo.message)
}

// int32 error_code = 5;
inline void PROTOLusp_UploadResultInfo::clear_error_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = 0;
}
inline ::int32_t PROTOLusp_UploadResultInfo::error_code() const {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_UploadResultInfo.error_code)
  return _internal_error_code();
}
inline void PROTOLusp_UploadResultInfo::set_error_code(::int32_t value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:lusp.PROTOLusp_UploadResultInfo.error_code)
}
inline ::int32_t PROTOLusp_UploadResultInfo::_internal_error_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_code_;
}
inline void PROTOLusp_UploadResultInfo::_internal_set_error_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_code_ = value;
}

// -------------------------------------------------------------------

// PROTOLusp_UploadResponse

// .lusp.PROTOLusp_UploadResultInfo result = 1;
inline bool PROTOLusp_UploadResponse::has_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.result_ != nullptr);
  return value;
}
inline void PROTOLusp_UploadResponse::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ != nullptr) _impl_.result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lusp::PROTOLusp_UploadResultInfo& PROTOLusp_UploadResponse::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lusp::PROTOLusp_UploadResultInfo* p = _impl_.result_;
  return p != nullptr ? *p : reinterpret_cast<const ::lusp::PROTOLusp_UploadResultInfo&>(::lusp::_PROTOLusp_UploadResultInfo_default_instance_);
}
inline const ::lusp::PROTOLusp_UploadResultInfo& PROTOLusp_UploadResponse::result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lusp.PROTOLusp_UploadResponse.result)
  return _internal_result();
}
inline void PROTOLusp_UploadResponse::unsafe_arena_set_allocated_result(::lusp::PROTOLusp_UploadResultInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.result_);
  }
  _impl_.result_ = reinterpret_cast<::lusp::PROTOLusp_UploadResultInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lusp.PROTOLusp_UploadResponse.result)
}
inline ::lusp::PROTOLusp_UploadResultInfo* PROTOLusp_UploadResponse::release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lusp::PROTOLusp_UploadResultInfo* released = _impl_.result_;
  _impl_.result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::lusp::PROTOLusp_UploadResultInfo* PROTOLusp_UploadResponse::unsafe_arena_release_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lusp.PROTOLusp_UploadResponse.result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lusp::PROTOLusp_UploadResultInfo* temp = _impl_.result_;
  _impl_.result_ = nullptr;
  return temp;
}
inline ::lusp::PROTOLusp_UploadResultInfo* PROTOLusp_UploadResponse::_internal_mutable_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lusp::PROTOLusp_UploadResultInfo>(GetArena());
    _impl_.result_ = reinterpret_cast<::lusp::PROTOLusp_UploadResultInfo*>(p);
  }
  return _impl_.result_;
}
inline ::lusp::PROTOLusp_UploadResultInfo* PROTOLusp_UploadResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lusp::PROTOLusp_UploadResultInfo* _msg = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:lusp.PROTOLusp_UploadResponse.result)
  return _msg;
}
inline void PROTOLusp_UploadResponse::set_allocated_result(::lusp::PROTOLusp_UploadResultInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.result_ = reinterpret_cast<::lusp::PROTOLusp_UploadResultInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:lusp.PROTOLusp_UploadResponse.result)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace lusp


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::lusp::PROTOLusp_UploadStatusInf> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lusp::PROTOLusp_UploadStatusInf>() {
  return ::lusp::PROTOLusp_UploadStatusInf_descriptor();
}
template <>
struct is_proto_enum<::lusp::PROTOLusp_UploadFileTyped> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lusp::PROTOLusp_UploadFileTyped>() {
  return ::lusp::PROTOLusp_UploadFileTyped_descriptor();
}
template <>
struct is_proto_enum<::lusp::PROTOLusp_FileExistPolicy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lusp::PROTOLusp_FileExistPolicy>() {
  return ::lusp::PROTOLusp_FileExistPolicy_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // upload_5ffile_5finfo_2eproto_2epb_2eh
